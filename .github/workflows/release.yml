name: "Build"

on:
  pull_request:
    branches: [dev, test, feature, main]
  push:
    branches: [dev, test, feature, main]

permissions:
  contents: write

jobs:  
  build:      
    name: Build & Release 
    runs-on: self-hosted
    env:
      ANDROID_HOME: /home/tadeas/Android/Sdk
      JAVA_HOME: /home/tadeas/.asdf/installs/java/oracle-17.0.11
      SHELL: /usr/bin/bash

    steps:
      - name: Validate Environment
        run: |
          echo "Checking Java..."
          if [ -x "$JAVA_HOME/bin/java" ]; then
            $JAVA_HOME/bin/java -version
          else
            echo "Error: Java not executable at $JAVA_HOME/bin/java"
            ls -la $JAVA_HOME/bin/java
          fi
          echo "Checking Flutter..."
          flutter doctor -v
          echo "Checking Android SDK..."
          echo $ANDROID_HOME

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            pubspec.yaml
            pubspec.lock
            lib/
            android/
            .github/
            assets/
          sparse-checkout-cone-mode: false

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool/
            build/
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Parallel Setup
        run: |
          # Run tasks in parallel
          (flutter pub get) &
          (echo "X_API_KEY=${{ secrets.X_API_KEY }}" >> .env) &
          wait

      - name: Setup Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          cat << EOF > android/key.properties
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=keystore.jks
          EOF

      - name: Build APK
        run: |
          if ! flutter build apk \
            --release \
            --no-tree-shake-icons \
            --target-platform android-arm64 \
            --split-debug-info=./debug-info \
            --obfuscate; then
            echo "Build failed"
            exit 1
          fi

      - name: Version and Release
        run: |
          # Update version
          current_version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          new_version=$(echo $current_version | awk -F. '{print $1"."$2"."$3+1}')
          sed -i "s/^version: .*/version: $new_version/" pubspec.yaml
          echo "VERSION=$new_version" >> $GITHUB_ENV
          
          # Git config and commit
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add pubspec.yaml
          git commit -m "chore: bump version to $new_version [skip ci]"
          git push

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: v${{ env.VERSION }}
          token: ${{ github.token }}
          name: "Android Release v${{ env.VERSION }}"
          body: |
            Meta Chat Viewer Android Release v${{ env.VERSION }}
            
            Changes in this version:
            - Cross-collection search improvements with retry mechanism
            - Performance optimizations for large message collections
            - Bug fixes and stability improvements
          generateReleaseNotes: false
          makeLatest: legacy

      - name: Cleanup
        if: always()
        run: |
          rm -f android/app/keystore.jks
          rm -f android/key.properties
          flutter clean