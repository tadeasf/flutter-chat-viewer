name: "Build"

on:
  pull_request:
    branches: [dev, test, main]
  push:
    branches: [dev, test, main]

permissions:
  contents: write

jobs:  
  build:      
    name: Build & Release 
    runs-on: ubuntu-latest 

    steps:
        #1 Cache Gradle dependencies first
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

        #2 Cache Flutter dependencies
      - name: Cache Flutter Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-flutter-

        #3 Checkout Repository (with sparse checkout for faster cloning)
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            pubspec.yaml
            lib/
            android/
            .github/
            assets/
          sparse-checkout-cone-mode: true

        #4 Setup Java with cache
      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'
          cache: 'gradle'

        #5 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.2'
          channel: 'stable'
          cache: true

        #6 Install Dependencies & Create .env in parallel
      - name: Parallel Setup
        run: |
          # Run tasks in parallel
          (flutter pub get) &
          (echo "X_API_KEY=${{ secrets.X_API_KEY }}" >> .env) &
          wait

        #7 Setup Keystore (combined steps for fewer operations)
      - name: Setup Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          cat << EOF > android/key.properties
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=keystore.jks
          EOF
        
        #8 Build APK with optimizations
      - name: Build APK
        run: |
          flutter build apk \
            --release \
            --no-tree-shake-icons \
            --target-platform android-arm64 \
            --split-debug-info=./debug-info \
            --obfuscate

        #9 Version and Release (combined steps)
      - name: Version and Release
        run: |
          # Update version
          current_version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          new_version=$(echo $current_version | awk -F. '{print $1"."$2"."$3+1}')
          sed -i "s/^version: .*/version: $new_version/" pubspec.yaml
          echo "VERSION=$new_version" >> $GITHUB_ENV
          
          # Git config and commit
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add pubspec.yaml
          git commit -m "chore: bump version to $new_version [skip ci]"
          git push

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: v${{ env.VERSION }}
          token: ${{ github.token }}
          name: "Android Release v${{ env.VERSION }}"
          body: |
            Meta Chat Viewer Android Release v${{ env.VERSION }}
            
            Changes in this version:
            - Cross-collection search improvements with retry mechanism
            - Performance optimizations for large message collections
            - Bug fixes and stability improvements
          generateReleaseNotes: false
          makeLatest: legacy
